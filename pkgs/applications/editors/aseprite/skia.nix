{ stdenv, lib, fetchFromGitHub, fetchgit, python, gn, ninja
, fontconfig, expat, icu58, libglvnd, libjpeg, libpng, libwebp, zlib
, mesa, libX11, freetype, harfbuzz,
}:

let
  # skia-deps.nix is generated by: ./skia-make-deps.sh 'angle2|dng_sdk|piex'
  depSrcs = import ./skia-deps.nix { inherit fetchgit; };
in
stdenv.mkDerivation {
  pname = "skia";
  version = "aseprite-m102";

  src = fetchFromGitHub {
    owner = "aseprite";
    repo = "skia";
    # latest commit from aseprite-m102 branch
    rev = "478f512f7a84658167d9f83f35d42fb0903b4a37";
    sha256 = "sha256-yq6i/+13vfpUxs5zXAOjJcimPvBMpkJxe6l+7+2Yxlc=";
  };

  nativeBuildInputs = [ python gn ninja ];

  buildInputs = [
    fontconfig expat icu58 libglvnd libjpeg libpng libwebp zlib
    mesa libX11 freetype harfbuzz
  ];

  postPatch = ''
    sed -i third_party/harfbuzz/BUILD.gn -e "s@/usr/include/harfbuzz@${harfbuzz.dev}/include/harfbuzz@"
  '';

  preConfigure = with depSrcs; ''
    mkdir -p third_party/externals
    ln -s ${angle2} third_party/externals/angle2
    ln -s ${dng_sdk} third_party/externals/dng_sdk
    ln -s ${piex} third_party/externals/piex
  '';

  configurePhase = let args = [
    "is_debug=false"
    "is_official_build=true"
    "skia_use_system_expat=true"
    "skia_use_system_icu=true"
    "skia_use_system_libjpeg_turbo=true"
    "skia_use_system_libpng=true"
    "skia_use_system_libwebp=true"
    "skia_use_system_zlib=true"
    "skia_use_sfntly=false"
    "skia_use_freetype=true"
    "skia_use_harfbuzz=true"
    "skia_pdf_subset_harfbuzz=true"
    "skia_use_system_freetype2=true"
    "skia_use_system_harfbuzz=true"
    "skia_use_libwebp_encode=false"
    "skia_use_libwebp_decode=false"
  ]; in ''
    runHook preConfigure
    gn gen out/Release-x64 --args="${lib.concatStringsSep " " args}"
    runHook postConfigure
  '';

  buildPhase = ''
    runHook preBuild
    ninja -C out/Release-x64 skia modules
    runHook postBuild
  '';

  installPhase = ''
    mkdir -p $out

    # Glob will match all subdirs.
    shopt -s globstar

    # All these paths are used in some way when building aseprite.
    cp -r --parents -t $out/ \
      include/codec \
      include/config \
      include/core \
      include/effects \
      include/gpu \
      include/private \
      include/utils \
      include/third_party \
      modules \
      src/core \
      src/gpu \
      out/Release-x64/*.a
  '';

  meta = with lib; {
    description = "Skia is a complete 2D graphic library for drawing Text, Geometries, and Images";
    homepage = "https://skia.org/";
    license = licenses.bsd3;
    maintainers = with maintainers; [ ];
    platforms = platforms.all;
  };
}
